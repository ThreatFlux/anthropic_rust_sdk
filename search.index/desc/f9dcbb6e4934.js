rd_("iI/O errorAjContains the success valueAnUnique identifier for the fileBaUnique identifier for the messageoOrganization IDiMember IDlWorkspace IDjAPI key IDAoUnique identifier for the batchAoUnique identifier for the modelBlCreate a simple question-answer conversationAdAny tool can be usedAbAPI error responseAhContains the error valueBcAdd a simple request using defaultsCaAPI modules for different Anthropic API endpointsAjGet a specific model by IDAfGet a specific API keyAlGet organization informationAhGet a specific workspaceAdGet file informationBgGet the number of requests in the batchCeCreate a new client with the given configuration, \xe2\x80\xa6AnCreate a new Models API clientAmCreate a new Admin API clientB`Create a new API Keys API clientBdCreate a new Organization API clientAmCreate a new Usage API clientBaCreate a new Workspace API clientAmCreate a new Files API clientBgCreate a new Message Batches API clientB`Create a new Messages API clientAjCreate a new batch builderAlCreate a new message builderCaCreate a new configuration with the given API keyAfCreate new usage statsAlCreate a new tool definitionAcCreate new metadataB`Create a new file upload requestAjCreate a new file downloadAdCreate a new messageAlCreate a new message requestB`Create a new token count requestBdCreate a new member creation requestBbCreate a new member update requestBgCreate a new workspace creation requestBeCreate a new workspace update requestBeCreate a new API key creation requestBcCreate a new API key update requestAhCreate a new usage queryAjCreate a new batch requestAoCreate a new batch request itemCaCreate a new message stream from an HTTP responseAiCreate a new event parserB`Create new empty request optionsBhCreate new pagination with default limitAhCreate a new HTTP clientAiCreate a new retry clientAiCreate a new retry policyBcCreate new rate limiting middlewareAiCreate a new rate limiterBeCreate a new rate limit configurationBbCreate a new adaptive rate limiterAdAuthentication errorAcAuto tool selectionoCode generationAdFile operation errorBdA file uploaded to the Anthropic APICeHTTP request error (deprecated - use Network instead)BhJSON serialization/deserialization errorAjOpus models (most capable)jPing eventAhMessage role enumerationlText contentBdTool definition for function callingAjSpecific tool must be usedlUser messageAnCreate an authentication errorCbCreate a chat completion with conversation historyA`Cost information0nThe data items0000000AhFile-related data modelsAmThe uploaded file informationAoReturns the argument unchanged.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AeHTTP client utilitiesBaCalls <code>U::from(self)</code>.0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000AcCreate a JSON errorAeList available modelsmList API keysoList workspacesjList filesAdList message batchesiTool nameAcSet the member namelSet the name00AaOrganization namekMember nameAfMember name (optional)AcNew name (optional)nWorkspace name01lAPI key name02nBenchmark namelMessage roleCjRole of the message (always \xe2\x80\x9cassistant\xe2\x80\x9d for responses)lSet the rolekMember role0AcNew role (optional)AaGet the file size0AgGet the model size/tierAkCreate a text content blockChGet the text content of the message (concatenated if \xe2\x80\xa6BdGet the text content of the responseAlText delta (for text blocks)jAdd a toolAlAdd a user message with textAoCreate a user message with textAbOrganization adminAfFile processing failedkError eventB`Haiku models (fast, lightweight)mImage contentBdInformation about an available modelAbOrganization ownerAeFile is ready for useA`Usage statisticsBiAccess the Admin API (requires admin key)AaAdmin API modulesAeAdmin API data modelsAeCursor for paginationB`Apply rate limiting to a requestBaMessage batch-related data modelsAgBuild the batch request0AiBuild the message requestCgBurst allowance (requests that can be made immediately)lMember email0BbError types for the Threatflux SDKBkError information if file processing failedBeError information if the batch failedAmError information (if failed)AdAccess the Files APIAhFiles API implementationAmCreate an image content blockBbNumber of items to return per pageBhTotal requests allowed in current windowmSet the modelAiModel-related data models11AlModel to use for the messageAkModel used for the responseAoModel to use for token countingiSet modeljModel namenSpecific modelAdModel being comparedBaWhen the rate limit window resetsBkRetry logic for handling transient failuresB`Performance score (if available)nScore achievedAdGet retry statisticsAfGet current statistics0AbAdd multiple toolsBdTools available for the model to useAoTools to include in token countiSet top-k0AhTop-k sampling parameterAfSet top-p (0.0 to 1.0)iSet top-pAhTop-p sampling parameterAhTotal number of requestsAjCommon types and utilitiesAcUnits for the scoreAnUsage Admin API implementationAfAccess usage endpointsAgToken usage informationA`Usage statisticsChUtility modules for HTTP, retry logic, and rate limitingB`Shared utilities for API modulesmActive memberA`Active workspaceAcAPI key informationAdBase64 encoded imageBaMain client for the Anthropic APIBjConfiguration for the Anthropic API clientAcConfiguration error0lBatch failedmLegacy modelsAcOrganization member0BdClaude 3 Opus - Maximum intelligenceBeClaude Opus 4 - Previous Opus versionBkResult type alias for Threatflux operationsBdSonnet models (balanced performance)lStream errorBcSystem message (for system prompts)A`Read-only accessBhVision capabilities (can process images)AeAdd a Q&amp;A requestAlCreate a base64 image sourceAmCursor for reverse paginationAfCancel a message batchBaHTTP client for the Anthropic APIBnCommon builder traits and validation utilitiesBjCommon data types shared across API modelsBjConfiguration for the Anthropic API clientAeGet the configurationAlCreate a configuration errorAaGet configurationAdCreate a new API keyAfCreate a new workspaceAfCreate a message batchA`Create a messageAfCustom metadata fieldsAaDelete an API keyAbDelete a workspacemDelete a fileAfDelete a message batchAgCheck if a model existsAiNumber of failed requestsAdGet the model familyCbJitter to add to delays (prevents thundering herd)BaData models for the Anthropic APIAeAccess the Models APIAiModels API implementationAgAvailable Claude modelsAcThe message requestAaRotate an API keykFile statusnSet the status0mMember statusAeNew status (optional)A`Workspace statusnAPI key status2A`Enable streamingAeCreate a stream errorAhEnable/disable streamingAnWhether to stream the responseAaSet system promptBaCreate a system message with text11AhSystem prompt (optional)BgSystem prompt to include in token countAaUpdate an API keyAbUpdate a workspacemUpload a fileAdTime window durationoClaude 3 familyAfNatural end of messageAjInvited but not yet joinedAkA message in a conversationCiNetwork error (includes HTTP, connection, and timeout \xe2\x80\xa6B`Batch is waiting to be processedAeRequest timeout errorA`Tool use contentAbTool use requestedAeTool use capabilitiesmGeneric errorAeUnknown/custom familylUnknown sizeCaHelper trait for adding items to optional vectorsCiWait until a request can be made (respecting rate limits)AnAcquire with adaptive behaviorAjAPI key for authenticationAcArchive a workspaceBhGet text content if this is a text blockAeFile content as bytes0oMessage contentAnContent blocks in the responseAhAdditional error detailsBeCreate enabled thinking configurationBhCustom headers to include in the requestCkGet the current state for inspection (optional, returns \xe2\x80\xa6AkCheck if the stream is doneAlThe cursor for the last item0000000mAdd a messageAkMessage-related data modelsmError message0BdThe message response (if successful)1AaThe error messageAfCreate a network errorAkSet the purpose of the fileAcPurpose of the file0AgMake a raw HTTP requestC`Make an HTTP request and parse the JSON responseBeMake an HTTP request with retry logicAmRestore an archived workspaceAhRequest timeout durationAfCreate a timeout errorBmOverride the default timeout for this requestCeCreate a new client with the given configuration, \xe2\x80\xa6AgSet user ID in metadataBcUser ID associated with the messageBeAdmin API client (requires admin key)AbArchived workspaceAgCreative writing presetAaClaude 3.5 familyA`Cost informationAcRate limit exceededAnAPI client for Files endpointsA`Message metadataCgClaude Opus 4.1 - Most powerful, best for complex tasksCfClaude Sonnet 4 - Balanced performance, 1M context \xe2\x80\xa6mTraining dataBdAPI client for Usage admin endpointsAbUser-uploaded dataAoAdd a request item to the batchBdAdd multiple requests using defaultsjAdd a tool0BaAPI Keys Admin API implementationAiAccess API keys endpointsAdBase URL for the APIBoBuilder utilities for constructing API requestsAgCreative writing presetmCurrency codeBfCreate disabled thinking configurationAeDownload file contentlSet end dateAfEnd date for the querymFeature flags0AaOriginal filename00AmThe cursor for the first item0000000BjCreate a client from environment variablesBoCreate configuration from environment variablesBfWhether there are more items available0000000AkCheck if the batch is emptyAjCheck if the file is emptyAnCheck if the download is emptyAmCheck if the file is an imageBbCheck if the file is ready for useCdList all models (convenience method that handles \xe2\x80\xa6BfList all API keys (convenience method)BhList all workspaces (convenience method)AgAccess the Messages APIAkMessages API implementationAeAdd multiple messagesBdList of messages in the conversationAlMessages to count tokens forlSet metadata0A`Message metadataA`Request metadataoDisable retriesB`Disable retries for this requestCkCreate a rate limiter for a specific rate (requests per \xe2\x80\xa6C`Get a reference to the requests (for inspection)AfList of batch requests0AhRetrieve a message batchAjWhen the benchmark was runA`Set the settings0AeOrganization settingsAbWorkspace settings0AgNew settings (optional)CjSimple API test binary Run: ANTHROPIC_API_KEY=your_key \xe2\x80\xa6BoEnable extended thinking mode (Claude 4 models)0CaExtended thinking configuration (Claude 4 models)AoCreate a tool use content blockAjValidate the configurationAaAssistant messageAcBatch was cancelledAlBatch completed successfullyAaDocument analysisAeFiles API beta headerAfFile error informationBoClaude 3.5 Haiku - Fastest, most cost-effectiveAhHit maximum tokens limitoModel size/tierAoAPI client for Models endpointsA`Rate limit errorA`Suspended memberAcSuspended workspaceAeWorkspace informationBgAdd multiple request items to the batchBmAdmin API key for admin operations (optional)AfCreate a new API errorBbAdd an assistant message with textBeCreate an assistant message with textBfBuild the full URL for an API endpointAlNumber of cancelled requestsAlNumber of completed requestsBcCustom ID for tracking this requestAjCustom ID from the requestAnCreate ephemeral cache controlAfGet the file extensionAeWhen the batch failedAnCheck if the file has an errorAiCheck if the batch failedAfWhen the member joinedAmMaximum delay between retriesAfMaximum possible scoreAeMIME type of the fileiMIME typeAkDisable streaming (default)CnPush an item to an optional vector, creating the vector if \xe2\x80\xa6BnNumber of requests remaining in current windowBmStreaming support for real-time API responsesBbWorkspace Admin API implementationAgAnalytical tasks presetBgAPI client for API Keys admin endpointsAgBatch error informationAfBatch processing inputAn1M context window for Sonnet 4AbModel capabilitiesAfFile processing statusA`Fine-tuning dataBkHTTP client wrapper for making API requestsA`HTTP method enumAhBatch is being processedkMember roleBeUsage statistics for a specific modelAePagination parametersAgFile is being processedAoRetry statistics for monitoringBhClaude 3.5 Sonnet - Balanced performanceBkClaude 3.7 Sonnet - Previous Sonnet versionAgStop reason enumerationAcTool choice optionsAcTool result contentAfUsage query parametersB`Add a member to the organizationAhGet all available modelsAgAnalytical tasks presetnSet API key IDAcSpecific API key IDjAPI key IDCgGet a reference to the current request (for inspection)AaBenchmark resultsAeType of content blockBgType of cache control (\xe2\x80\x9cephemeral\xe2\x80\x9d)AjWhen the file was uploadedAlWhen the message was createdBaWhen the organization was createdAnWhen the workspace was createdAhWhen the key was createdAjWhen the batch was createdAjWhen the model was createdAoWhether the model is deprecatedjError type00nThe error typeAcSet expiration dateAdWhen the key expiresoExpiration dateBiWhen the batch expires (if not processed)AcCreate a file errorAgCreate from image bytesAeGet a specific memberAkWhen the member was invitedAnCheck if the batch has expirednSet max tokens0BdMaximum number of tokens to generateB`Maximum context length in tokensB`Parse a line from the SSE streamCkCreate a rate limiter for a specific rate (requests per \xe2\x80\xa60oPeriod end timeAiCreate a rate limit errornSet rate limitAgRate limiting utilitiesBoGet retry rate (requests that required retries)AiSize of the file in bytesnSet start dateAhStart date for the queryBcThreatflux - Anthropic API Rust SDKAkAdd a tool use error resultBiCreate an error tool result content blockAoWhen the file was last modifiedBfWhen the organization was last updatedBcWhen the workspace was last updatedAoWhen the model was last updatedAaUser agent stringAdSet the after cursorAcSet burst allowancemSet the limitBnCreate a message builder with a specific modelAjAccess workspace endpointsAeAnthropic API versionAiAPI key usage informationAgBatch processing outputAiResult of a batch requestBkParser for Server-Sent Events (SSE) streamsAhFile purpose enumerationAbImage source typesoMessage stoppedBaAPI client for Messages endpointsAhModel family informationAgPDF support beta headerBnRate limiter for controlling request frequencyCeClient wrapper that adds retry logic to HTTP requestsAjRetry policy configurationAeStreaming event typesB`Usage for a specific time periodlUsage reportB`Add content block to the messagemAdd a message0C`Add a request with custom ID and message requestCfAdd a simple request to the batch (convenience method)BoWhen the workspace was archived (if applicable)A`Tool descriptionAcSet the description000AhOrganization descriptionAeWorkspace description0AjNew description (optional)AcAPI key description01AaModel descriptionoSet granularityAjGranularity for the reportAnCheck if the batch is completeAoCheck if the file is a documentB`Maximum number of retry attempts0AoObject type (always \xe2\x80\x9cfile\xe2\x80\x9d)BbObject type (always \xe2\x80\x9cmessage\xe2\x80\x9d)BhObject type (always \xe2\x80\x9cmessage_batch\xe2\x80\x9d)B`Object type (always \xe2\x80\x9cmodel\xe2\x80\x9d)BkParse a single event (for testing purposes)BcPartial API key value (for display)AcAPI key permissions0AjNew permissions (optional)AoQuery usage with custom filterskRate limits0AhRate limits for this key1AjNew rate limits (optional)BaUpdate stats with a new wait timeAfReset retry statisticsBaReset the rate limiter statisticskResult typeCjHow long to wait before retrying (from Retry-After header)AoEnable or disable rate limitingBeGet the HTTP status code if availableAjReason the message stoppedBfStop reason if the message is completeAlSet temperature (0.0 to 1.0)oSet temperatureBaSampling temperature (0.0 to 1.0)oSet tool choice0AfTool choice preferenceAeAdd a tool use resultBbCreate a tool result content blockCdTry to acquire permission immediately (non-blocking)BeTry to acquire with adaptive behaviorAeSet the before cursorA`Add custom fieldAcAdd a custom headerAeEnable/disable jitterAlApply a preset configurationBoCheck if the rate limiter would allow a requestAcBase64 decode errorCiBuilder for constructing batch requests with a fluent APIB`Cache control for prompt cachingAcContent block typesAiFile download informationAcInvalid input errormMember statusAkA batch of message requestsAgStreaming message deltamMessage deltaoMessage startedAhOrganization informationAhPrompt tools beta headerCkPreset configurations for consistent parameter combinationsAiStop sequence encounteredBhAPI client for Workspace admin endpointsAnAdd a creative writing requestlAPI key nameBaBeta headers for various featuresAlWhen the batch was cancelledAbModel capabilitiesBiCollect only text content from the streamBcWhen the batch processing completedCbHelper function to create consistent config errorslContent typeAhAdd conversation historyAiCount tokens in a messageBfCreate a quota from this configurationAdSet the display name0AiOrganization display nameAfWorkspace display name0AkNew display name (optional)AkHuman-readable display nameCgServer-Sent Events (SSE) parser for streaming responsesB`Finish parsing the current eventAjInput schema (JSON Schema)AfNumber of input tokens0AgTotal input tokens usedB`Input tokens used in this periodAaInput tokens usedAjGet the underlying builderB`Check if the batch was cancelledBbCheck if this is a retryable errorAjWhen the key was last usedAiList organization membersB`Maximum requests per time windowBeOrganization Admin API implementationAmAccess organization endpointsAaPeriod start timeAeRequire specific toolnSave to a fileCiCheck if a request should be retried based on status codeBlDetermine if an error should trigger a retryA`Get success rateCeGet success rate (requests that eventually succeeded)A`Get total tokensB`Add context to an existing errorAgSet the request timeoutAdSet a custom timeoutkSet user IDA`Set workspace IDAeSpecific workspace IDAiAssistant-generated filesBkDefault model to use when none is specifiedCdTrait for builders that support fluent configurationBoStream of message events from the Anthropic APIBlRate limit information from response headersAjRequest counts for a batchBjAverage wait time per rate limited requestBgBuilder for constructing batch requestsCiAdditional beta features to enable (will be comma-joined)ClMaximum tokens to allocate for thinking (up to 64000 for \xe2\x80\xa6AoBuild HTTP headers for requestsAjCreate a streaming messageBdGet the current effective rate limitAdDefault model to useBbDefault model for the organizationAoDefault model for the workspaceBfCalculate estimated cost for a requestAjAdd a simple function toolAmInitial delay between retriesAmCreate an invalid input errorB`Check if the model is deprecatedBeCheck if the file is still processingBaCheck if the batch was successfulBfMaximum wait time for a single requestAgNumber of output tokensAhTotal output tokens usedBaOutput tokens used in this periodAbOutput tokens usedBeRemove a member from the organizationAcTotal requests madeAlRequests made in this periodAbNumber of requestsAcAdd a stop sequenceBmStop sequence that caused the message to stop0CgType of thinking mode (\xe2\x80\x9cenabled\xe2\x80\x9d or \xe2\x80\x9cdisabled\xe2\x80\x9d)oUpdate a memberA`Set the base URLBnSet default parameters for subsequent requestsC`Create a rate limiter with default configurationAkAdd metadata to the messageBiMain error type for the Anthropic API SDKAhConversational AI presetCkBuilder for constructing message requests with a fluent APIAkRequest to create a messageAjPrompt caching beta headerAfRate limit error typesAlStatistics for rate limitingBiRequest options for customizing API callsCcExtended thinking configuration for Claude 4 modelsAiAdd an analytical requestA`Add a permission0BeAllow tool use during thinking (beta)CaCheck Claude\xe2\x80\x99s token usage in this conversationnContent length<BhCreate exponential backoff configurationBkCreate exponential backoff from this policyBlCheck if the model has a specific capabilityBaWhen the batch processing startedBcCheck if a model is valid/supportedAoWhen the member was last activeAgList API keys by statusAfList batches by statusAkStreaming message responsesAoRate limit: requests per secondAoNumber of requests in the batchAhMake a streaming requestAmMake a streaming HTTP requestAkAdd multiple stop sequencesAeCustom stop sequencesBdCheck if the model supports tool useBbTotal number of requests attemptedAhTotal requests attemptedAhUsage breakdown by modelAhValidate top_p parameterAeSet the admin API keyAmEnable Files API beta featureAaSet maximum delayAlBenchmark result for a modelAfCode generation presetB`Response from creating a messageAfModel capability flagsAlModel comparison informationBkAPI client for Organization admin endpointsAhRate limit configurationAfRequest priority levelAaStream event typeBhCommon validation utilities for buildersA`Workspace statusAoGet average retries per requestAnBuild and validate the requestBdBuild and validate the batch request0BfBuild and validate the message requestBiCalculate delay before next retry attempt>CgPreset for code generation (includes stop sequences \xe2\x80\xa6CcCollect all events into a complete message responseAiAdd custom metadata fieldC`Number of requests that failed after all retriesCdHandle HTTP response and parse JSON or return errorsCaCheck if this is a client error (4xx status code)CeCheck if a status code indicates a client error (4xx)CaCheck if this is a server error (5xx status code)CeCheck if a status code indicates a server error (5xx)CdCheck if this model is suitable for a given use caseAeList files by purposeAnAccess the Message Batches APIBbMessage Batches API implementationBiBuilder for constructing message requestsBcParse JSON data with error handlingBlResults file ID (available after completion)BbCheck if the model supports visionBaSet custom thinking configurationBhTotal time spent waiting for rate limitsAnUsage breakdown by time periodAmAdd a user message with imageBeEnable 1M context window for Sonnet 4AiSet the user agent stringAlAPI error response structureBbIndividual request item in a batchBlError information for a failed batch requestAeContent block stoppedAkResponse when listing filesCgTrait for builders that support parameter configurationAmFile upload progress callbackChTrait for builders that can be validated before buildingAjAdd a conversation requestAjAdd a request to the batchAbAdd a user message0BeAdd a request using a message builderCgApply this preset to a builder with settable parametersCaPreset for Claude 4 with tool use during thinkingAhGet the default base URLAnDeprecation date if applicableAoDownload file content to a pathAmEnable Files API beta featureAjGet top consuming API keysAcInput cost in centsBeList all members (convenience method)BdMaximum total time to spend retryingAkRequire tool use (any tool)BhNumber of requests that required retriesBoGet the time until the next request can be madeAcTotal cost in centsAiUpload a file from a pathBaSet the maximum number of retriesAmSet maximum number of retriesAoEnable PDF support beta featureBaContent block delta for streamingAcContent block deltaAeContent block startedAhRequest to upload a fileBhAPI client for Message Batches endpointsAlResponse when listing modelsAjPaginated response wrapperBdRequest to count tokens in a messageAbWorkspace settingsAlAdd requests from a templateAcAdd a stop sequenceBoCheck how many requests can be made immediatelyBeEnable 1M context window for Sonnet 4BgGet usage report for a specific API keyBbGet usage summary for a date rangeAeMaximum output tokensAdOutput cost in centsAiCurrent processing statusBmGet the recommended delay before next requestC`Make a multipart form request (for file uploads)CaPreset for Claude 4 Sonnet with balanced thinkingBkCheck if a model supports extended thinkingBdTotal time spent waiting for retriesAiAdd a custom beta featureAnResponse when listing API keysAnResponse when uploading a fileAmResponse when listing membersAiStatus of a message batchAmResponse from counting tokensAlAdd a conversational requestAiAdd a simple text requestAbBackoff multiplierBaGet the default user agent stringAoEnable PDF support beta featureCcCreate enabled thinking configuration with tool useCaGet models by capability (e.g., vision, tool use)BaGet usage history with paginationAeSet the default modelAaSet initial delayAoEnable or disable rate limitingChAdaptive rate limiter that adjusts based on response \xe2\x80\xa6AoRequest to create a new API keyAlRequest to update an API keyAnRequest to create a new memberAjRequest to update a memberCjGeneric message batch request (for backward compatibility)CeRate limiting middleware for automatic request pacingAmAdd a code generation requestBhBuild admin headers (includes admin key)CkCount tokens for a simple text message (convenience method)BiGet usage report for a specific workspaceAlGet human-readable file sizeBgGet maximum thinking tokens for a modelAgGet processing durationBkCheck if a model supports 1M context windowCiEnable extended thinking mode with tool use (Claude 4 \xe2\x80\xa60BkUpdate rate limit based on response headersAmValidate max_tokens parameterBgWait for a batch to complete processingBbEnable prompt caching beta featureBiSet the rate limit in requests per secondAeOrganization settingsCcAdd multiple similar requests with different inputsBdAdd a Q&amp;A request using defaultsCjBuilds pagination query parameters and adds them to a pathChCreate a smart backoff that considers rate limit headersAdEnable rate limitingAoInput cost per token (in cents)BkCheck if we\xe2\x80\x99re approaching the rate limitBnPreset for Claude 4 Opus with maximum thinkingBnNumber of requests that succeeded on first tryBcTotal number of retry attempts madeBlAdd a user message with image from file pathAnValidate temperature parameterB`Response when listing workspacesAhAdd an assistant messageBcBuilds a path with query parametersChHelper method to build request with common configurationAiGet completion percentageBbEnable prompt caching beta featureCbCreate options for Claude 4 with extended thinkingB`Output cost per token (in cents)B`Get the rate limiting percentageAoRequests that were rate limitedBbSet adaptation factor (0.0 to 1.0)AhSet maximum elapsed timeBaRequest to create a new workspaceAmRequest to update a workspaceBfBuilds query parameters for paginationBeGet usage report for the organizationBdAdd a user message with base64 imageBhExtended thinking with tools beta headerBcResponse when listing usage reportsAfSet backoff multiplierBeBatch builder with default parametersBeResponse when listing message batchesBfGet the cost per 1000 tokens for inputBdGet rate limit headers from responseAoValidate thinking configurationBaRequest to create a message batchCdCreates a default pagination for list_all operationsB`Get current billing period usageBgGet the cost per 1000 tokens for outputBeAdd a creative request using defaultsBkCreate options for Sonnet 4 with 1M contextBdValidate that messages are not emptyBhAdd an analytical request using defaultsBcEnable extended thinking with toolsBfValidate Claude 4 specific constraints1BkAdd a conversational request using defaultsBlAdd a code generation request using defaults")